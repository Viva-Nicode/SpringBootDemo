<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mappe 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.db.TagMapper">
	<insert id="insertTag" parameterType="java.util.List">
		insert into tag(pinName, tagName) 
		values 
			<foreach collection="list" item="item" separator=",">
			(
				#{item.pinName},
				#{item.tagName}
			)
			</foreach>
	</insert>

	<delete id="deleteTag" parameterType="java.util.List">
		delete from tag where tagid in
		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			${item.tagid}
		</foreach>
	</delete>

	<delete id="deleteNone" parameterType="java.util.List">
		delete from tag where tagName = 'none' and pinName in
		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			#{item.pinName}
		</foreach>
	</delete>

	<insert id="insertTagNone" parameterType="java.util.List">
		insert into tag(pinName)
		values
		<foreach collection="list" item="item" separator=",">
			(
				#{item}
			)
		</foreach>
	</insert>

	<!-- 어떤 유저의 모든(private 포함)태그들의 리스트를 반환하는 쿼리 -->
	<select id="findTagByUseridAll" parameterType="String" resultType="String">
		select distinct tagName 
		from tag 
		where pinName = some (
			select pinName 
			from Pin 
			where uploader = #{user_id});
	</select>

	<select id="findTagByUseridOnlyPublic" parameterType="String" resultType="String">
		select distinct tagName 
		from tag 
		where pinName = some (
			select pinName 
			from Pin 
			where uploader = #{user_id} and visibility = 0);
	</select>

	<select id ="getTagCountList" parameterType="String" resultType="com.example.demo.db.TagCount">
		select tagName, count(pinName) as count 
		from ( select * from tag where pinName = some ( 
		select pinName from Pin where uploader = #{user_id})) subQuery 
		group by tagName
	</select>

	<select id ="getTagPinNameList" parameterType="String" resultType="com.example.demo.Service.Tagger$TagMatchPinListInnerClass">
		select tagName, group_concat(pinName) as pinListString
		from ( select * from tag where pinName = some ( 
		select pinName from Pin where uploader = #{user_id})) subQuery 
		group by tagName
	</select>

	<delete id="deleteTagByUseridAndTagName" parameterType="hashMap">
		delete from tag 
		where tag.tagid = some ( 
			select tagid 
			from (select * from tag) tt inner join (select pinName from pin where uploader =#{map.user_id}) p 
			on p.pinName = tt.pinName 
			where tag.tagName = #{map.tagName}) 
	</delete>

	<select id="selectNottingTagPinsNone" parameterType="String" resultType="String">
		select P.pinName
		from (select * from tag) T right join (select pinName from pin where uploader = #{user_id}) P on T.pinName = P.pinName
		where T.tagName is NULL;
	</select>

	<update id="modifyTagName" parameterType="hashMap">
		update tag
		set tagName = #{map.ntn}
		where tag.tagid = some ( 
			select tagid 
			from (select * from tag) tt inner join (select pinName from pin where uploader = #{map.user_id}) p 
			on p.pinName = tt.pinName 
			where tag.tagName = #{map.otn}) 
	</update>

	<select id="getPininfoListByUploaderAll" parameterType="String" resultType="com.example.demo.Service.PinInfoObject">
		select p.pinName, group_concat(tagName) as taglist, 
		avg(uploadDate) as uploadDate, avg(resolutionRatio) as resolutionRatio 
		from ( select * from tag ) tt right join (select * from pin where uploader = #{uploader} ) p 
		on tt.pinName = p.pinName  
		group by pinName;
	</select>

	<select id="getPininfoListByUploaderOnlyPublic" parameterType="String" resultType="com.example.demo.Service.PinInfoObject">
		select p.pinName, group_concat(tagName) as taglist, 
		avg(uploadDate) as uploadDate, avg(resolutionRatio) as resolutionRatio 
		from ( select * from tag ) tt right join (select * from pin where uploader = #{uploader} and visibility = 0) p 
		on tt.pinName = p.pinName  
		group by pinName;
	</select>

	<select id="checkPinHostUser" parameterType="java.util.List" resultType="String">
		select uploader
		from pin
		where pinName in 
		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>

	<select id="getModifyPinTaglist" parameterType="java.util.List" resultType="com.example.demo.db.TagVO">
		select *
		from tag
		where pinName in
		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</select>
</mapper>



